// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String @id @default(uuid())
  userName       String
  email          String
  createdAt      DateTime @default(now())
  hashedPassword String
  salt           String
  deletedAt      DateTime?
  taughtCourses  CourseSemester[]
  taughtGroups   SeminarGroup[]
  studiedCourses CourseStudent[]
  studiedGroups  GroupStudent[]
}

model Course {
  id                String @id @default(uuid())
  description       String
  name              String
  deletedAt         DateTime?
  courseSemesters   CourseSemester[]
}

model SeminarGroup {
  id                String @id @default(uuid())
  registrationStart DateTime
  registrationEnd   DateTime
  capacity          Int
  deletedAt         DateTime?
  courseSemester    CourseSemester @relation(fields: [courseSemesterId], references: [id])
  courseSemesterId  String
  teachers          User[]
  students          GroupStudent[]
}

model Faculty {
  id        String @id @default(uuid())
  name      String
  deletedAt DateTime? 
}

model Semester {
  id              String @id @default(uuid())
  year            Int
  season          SemesterSeason
  semesterStart   DateTime
  semesterEnd     DateTime
  deletedAt       DateTime?
  courseSemesters CourseSemester[]
}

model CourseStudent {
    id        String @id @default(uuid())
    deletedAt DateTime?
    student   User @relation(fields: [studentId], references: [id])
    studentId String
    course    CourseSemester @relation(fields: [courseId], references: [id])
    courseId  String
}

model GroupStudent {
    id        String @id @default(uuid())
    deletedAt DateTime?
    student   User @relation(fields: [studentId], references: [id])
    studentId String
    group     SeminarGroup @relation(fields: [groupId], references: [id])
    groupId   String
}

model CourseSemester {
    id                String @id @default(uuid())
    registrationStart DateTime
    registrationEnd   DateTime
    capacity          Int
    teachers          User[]
    students          CourseStudent[]
    deletedAt         DateTime?
    course            Course @relation(fields: [courseId], references: [id])
    courseId          String
    semester          Semester @relation(fields: [semesterId], references: [id])
    semesterId        String
    seminarGroups     SeminarGroup[]
}

enum SemesterSeason {
  SPRING
  FALL
}